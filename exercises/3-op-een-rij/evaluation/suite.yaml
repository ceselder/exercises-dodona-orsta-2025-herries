- tab: "bepaal_winnaar"
  testcases:
    - expression: "bepaal_winnaar((('X', 'O', 'X'), ('O', 'X', 'O'), ('O', 'X', 'X')))"
      return: "X wint"
    - expression: "bepaal_winnaar((('O', 'O', 'O'), ('X', 'X', ''), ('', '', 'X')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', 'O', 'X'), ('O', 'X', 'O'), ('O', 'X', '')))"
      return: "niemand wint"
    - expression: "bepaal_winnaar((('O', 'X', 'X'), ('X', 'O', ''), ('', '', 'O')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', 'O', ''), ('X', 'O', 'O'), ('X', '', '')))"
      return: "X wint"
    - expression: "bepaal_winnaar((('', '', ''), ('', '', ''), ('', '', '')))"
      return: "niemand wint"
    - expression: "bepaal_winnaar((('O', '', 'X'), ('O', 'X', ''), ('O', '', '')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', 'X', 'X'), ('O', '', 'O'), ('', '', '')))"
      return: "X wint"
    - expression: "bepaal_winnaar((('O', 'X', 'O'), ('X', 'O', 'X'), ('X', 'O', 'X')))"
      return: "niemand wint"
    - expression: "bepaal_winnaar((('O', 'X', 'X'), ('X', 'O', 'O'), ('X', '', 'O')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', 'X', 'X'), ('O', 'O', ''), ('', '', '')))"
      return: "X wint"
    - expression: "bepaal_winnaar((('O', '', ''), ('O', 'X', 'X'), ('O', '', 'X')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', 'O', 'O'), ('O', 'X', 'X'), ('X', 'O', 'O')))"
      return: "niemand wint"
    - expression: "bepaal_winnaar((('X', '', ''), ('X', 'O', 'O'), ('X', '', '')))"
      return: "X wint"
    - expression: "bepaal_winnaar((('O', 'O', 'O'), ('X', '', 'X'), ('', 'X', '')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('O', 'X', 'O'), ('X', 'O', 'X'), ('X', 'O', 'O')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', '', ''), ('', 'X', ''), ('', '', 'X')))"
      return: "X wint"
    - expression: "bepaal_winnaar((('O', '', ''), ('', 'O', ''), ('', '', 'O')))"
      return: "O wint"
    - expression: "bepaal_winnaar((('X', 'O', 'X'), ('O', 'X', 'O'), ('O', 'X', 'O')))"
      return: "niemand wint"
    - expression: "bepaal_winnaar((('O', 'X', 'O'), ('X', 'O', 'X'), ('O', 'X', 'O')))"
      return: "O wint"
